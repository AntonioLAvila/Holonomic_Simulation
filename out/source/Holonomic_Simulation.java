/* autogenerated by Processing revision 1286 on 2022-10-23 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Holonomic_Simulation extends PApplet {

public DriveTrain drive;

 public void setup(){
    /* size commented out by preprocessor */;
    background(0xFF303134);
    drive = new DriveTrain();
}

 public void draw(){

    shape(drive.baseShape, 100, 100);
}
public class DriveTrain{

    public PShape baseShape;
    private scale;

    public DriveTrain(){
        initBase();
    }

    public void drawBase(PVector pos, double scaleFactor){
        baseShape = createShape();
        baseShape.beginShape();
        baseShape.vertex(-2*scaleFactor,-3*scaleFactor);
        baseShape.vertex(-3*scaleFactor,-2*scaleFactor);
        baseShape.vertex(-3*scaleFactor,2*scaleFactor);
        baseShape.vertex(-2*scaleFactor,3*scaleFactor);
        baseShape.vertex(2*scaleFactor,3*scaleFactor);
        baseShape.vertex(3*scaleFactor,2*scaleFactor);
        baseShape.vertex(3*scaleFactor,-2*scaleFactor);
        baseShape.vertex(2*scaleFactor,-3*scaleFactor);
        baseShape.endShape(CLOSE);
    }

    private initBase(){
        drawBase(screen.width/2, screen.height/2);
    }
}


  public void settings() { size(1920, 1080); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Holonomic_Simulation" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
